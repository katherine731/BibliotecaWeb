//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace HL.Biblio.POCO
{
    public partial class Editorial
    {
        #region Primitive Properties

        public virtual int Id {
            get;
            set;
        }

        public virtual string Nombre {
            get;
            set;
        }

        public virtual int Estado {
            get;
            set;
        }

        #endregion
        #region Navigation Properties

        public virtual Pais Pais {
            get { return _pais; }
            set {
                if(!ReferenceEquals(_pais, value)) {
                    var previousValue = _pais;
                    _pais = value;
                    FixupPais(previousValue);
                }
            }
        }
        private Pais _pais;

        public virtual ICollection<Libro> Libros {
            get {
                if(_libros == null) {
                    var newCollection = new FixupCollection<Libro>();
                    newCollection.CollectionChanged += FixupLibros;
                    _libros = newCollection;
                }
                return _libros;
            }
            set {
                if(!ReferenceEquals(_libros, value)) {
                    var previousValue = _libros as FixupCollection<Libro>;
                    if(previousValue != null) {
                        previousValue.CollectionChanged -= FixupLibros;
                    }
                    _libros = value;
                    var newValue = value as FixupCollection<Libro>;
                    if(newValue != null) {
                        newValue.CollectionChanged += FixupLibros;
                    }
                }
            }
        }
        private ICollection<Libro> _libros;

        #endregion
        #region Association Fixup

        private void FixupPais(Pais previousValue) {
            if(previousValue != null && previousValue.Editoriales.Contains(this)) {
                previousValue.Editoriales.Remove(this);
            }

            if(Pais != null) {
                if(!Pais.Editoriales.Contains(this)) {
                    Pais.Editoriales.Add(this);
                }
            }
        }

        private void FixupLibros(object sender, NotifyCollectionChangedEventArgs e) {
            if(e.NewItems != null) {
                foreach(Libro item in e.NewItems) {
                    item.Editorial = this;
                }
            }

            if(e.OldItems != null) {
                foreach(Libro item in e.OldItems) {
                    if(ReferenceEquals(item.Editorial, this)) {
                        item.Editorial = null;
                    }
                }
            }
        }

        #endregion
    }
}
